@use "../global" as *;
@use "sass:math";

* {
	border: 0;
	margin: 0;
	padding: 0;
}

*,
*::before,
*::after {
	box-sizing: border-box;
}

:focus,
:active {
	// outline: none;
}

a:focus,
a:active {
	// outline: none;
}

html,
body {
	height: 100%;
	min-width: $min-width + px;
	scroll-behavior: smooth;
}

body {
	@include font($body-font-family, $body-font-size, $body-line-height, $body-font-weight);
	color: $text-color-grey;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
	text-size-adjust: 100%;
	text-size-adjust: 100%;
	text-size-adjust: 100%;

	.lock & {
		overflow: hidden;
		overscroll-behavior: none;
		touch-action: none;
	}

	&.overflow {
		overflow: hidden;
	}
}

input,
button,
textarea {
	font-size: inherit;
	outline: none;
}

button {
	background-color: inherit;
	color: inherit;
	cursor: pointer;
}

a {
	color: $text-color-grey;
	text-decoration: none;
	transition: color 0.3s;

	&:hover {
		color: $link-hover-color;
	}
}

ul li {
	list-style: none;
}

img,
figure {
	height: auto;
	max-width: 100%;
	vertical-align: middle;
}

figure {
	margin-bottom: 0;
}

.grecaptcha-badge {
	z-index: 101 !important;
}

/* Wrapper
--------------------------------------------- */
.wrapper {
	display: flex;
	flex-direction: column;
	min-height: 100%;
	overflow: hidden;
	position: relative;
	padding-top: rem(74);
	background-color: $bg-color;

	@media (min-width: $mobile) {
		padding-top: rem(94);
	}

	@media (min-width: $tablet) {
		padding-top: rem(84);
	}

	@supports (overflow: clip) {
		overflow: clip;
	}
	// Press the footer
	> main {
		flex: 1 1 auto;
	}

	// Fix for sliders
	> * {
		min-width: 0;
	}
}

/* Container styles
--------------------------------------------- */
/*
Styles will apply to
of all classes containing *__container
For  example, header__container, main__container, etc.
*/
@if ($responsive-type==1) {
	// responsiveness
	[class*="__container"] {
		@if ($max-width-container>0) {
			max-width: rem($container-width);
			margin: 0 auto;
		}
		@if ($container-padding>0) {
			@if ($max-width-container>0) {
				padding: 0 rem(math.div($container-padding, 2));

				@media (max-width: $tablet) {
					padding-left: rem(math.div($container-padding, 4));
					padding-right: rem(math.div($container-padding, 4));
				}

				@media (max-width: $mobile) {
					padding-left: rem(math.div($container-padding, 8));
					padding-right: rem(math.div($container-padding, 8));
				}
			} @else {
				@include adaptive-value("padding-left", math.div($container-padding, 2), 15);
				@include adaptive-value("padding-right", math.div($container-padding, 2), 15);

				@media (max-width: $tablet) {
					padding-left: rem(math.div($container-padding, 4));
					padding-right: rem(math.div($container-padding, 4));
				}

				@media (max-width: $mobile) {
					padding-left: rem(math.div($container-padding, 8));
					padding-right: rem(math.div($container-padding, 8));
				}
			}
		}
	}
} @else {
	// at the breakpoint
	[class*="__container"] {
		margin: 0 auto;
		@if ($max-width-container>0) {
			max-width: rem($container-width);
		} @else {
			@if ($container-padding>0) {
				padding: 0 rem(math.div($container-padding, 2));
			}
		}
		@media (max-width: $pc) {
			max-width: rem(970);
		}
		@media (max-width: $tablet) {
			max-width: rem(750);
		}
		@media (max-width: $mobile) {
			max-width: none;
			@if ($container-padding>0 and $max-width-container>0) {
				padding: 0 rem(math.div($container-padding, 2));
			}
		}
	}
}
