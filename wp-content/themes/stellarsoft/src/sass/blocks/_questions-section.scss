@use "../global" as *;

.questions {
	@include adaptive-value("padding-top", 80, 60, 0, 768, 375);
	@include adaptive-value("padding-bottom", 80, 10, 0, 768, 375);
	@include adaptive-value("padding-left", 30, 10, 0, 768, 375);
	@include adaptive-value("padding-right", 30, 10, 0, 768, 375);
	background-color: $bg-color-grey;
	border-radius: rem(20);

	@media (min-width: $mobile) {
		@include adaptive-value("padding-top", 100, 80, 0, 1440, 768);
		@include adaptive-value("padding-bottom", 100, 80, 0, 1440, 768);
	}

	&__title {
		max-width: rem(1132);
		margin: 0 auto;
		margin-bottom: rem(40);

		@media (min-width: $desktop) {
			margin-bottom: rem(60);
		}

		& > * {
			text-align: center;
		}
	}
}

.questions-spollers {
	display: flex;
	flex-direction: column;
	gap: rem(10);
	max-width: rem(1132);
	margin: 0 auto;

	&__item {
		width: 100%;
		border-radius: rem(12);
		overflow: hidden;
		list-style: none;
		list-style-type: none;
	}

	&__title {
		@include adaptive-value("padding", 30, 20, 0, 768, 375);
		@include adaptive-value("padding-right", 100, 90, 0, 768, 375);
		@include adaptive-value("padding-bottom", 36, 20, 0, 768, 375);
		background-color: $bg-color-grey-light;
		list-style: none;
		list-style-type: none;
		position: relative;
		line-height: 30px;
		cursor: pointer;

		&::marker {
			visibility: hidden !important;
			opacity: 0 !important;
			display: none !important;
		}

		&::before {
			content: "+";
			@include adaptive-value("top", 30, 20, 0, 768, 375);
			@include adaptive-value("right", 30, 20, 0, 768, 375);
			display: flex;
			justify-content: center;
			align-items: center;
			position: absolute;
			width: rem(40);
			height: rem(40);
			border: rem(2) solid $bg-color-grey;
			border-radius: 50%;
			transition: all 0.5s;
			color: $text-color-light;
			font-size: rem(28);
		}

		& > * {
			font-size: rem(18);

			@media (min-width: $mobile) {
				font-size: rem(24);
			}
		}

		&._spoller-active {
			&::before {
				content: "";
				background-color: $bg-accent;
				border: rem(2) solid $bg-accent;
			}

			&::after {
				content: "";
				position: absolute;
				@include adaptive-value("top", 49, 39, 0, 768, 375);
				@include adaptive-value("right", 43, 33, 0, 768, 375);
				width: rem(14);
				height: rem(2);
				background-color: $text-color-light;
			}
		}

		&--dark {
			background-color: $bg-color-grey;

			&::before {
				border-color: $bg-color-grey-light;
			}
		}
	}

	&__body {
		@include adaptive-value("padding-left", 30, 20, 0, 768, 375);
		@include adaptive-value("padding-right", 30, 20, 0, 768, 375);
		@include adaptive-value("padding-bottom", 30, 20, 0, 768, 375);
		background-color: $bg-color-grey-light;

		& > * {
			color: $text-color-grey;
		}

		&--dark {
			background-color: $bg-color-grey;
		}

		a {
			color: $bg-accent;

			&:hover {
				color: $text-color-grey;
			}
		}

		ul,
		ol {
			font-size: rem(16);
			padding-left: rem(25);

			li {
				color: $text-color-grey;
			}
		}

		ul {
			list-style-type: disc;

			li {
				list-style: initial;
			}
		}
	}
}

summary {
	list-style: none;
}

summary::-webkit-details-marker {
	display: none;
}

summary::marker {
	display: none;
}

//Page services,Service FAQ block.Pop up pages.
.popup-questions {
	.questions-section__container {
		padding: 0;
	}

	.questions {
		padding: 0;
		background: none;

		&__title {
			margin-bottom: rem(30);
			@include adaptive-value("padding-left", 0, 10, 10, 1440, 375);

			h2 {
				text-align: left;
			}
		}
	}

	.questions-spollers {
		&__title {
			background-color: $bg-color-grey;

			&::before {
				border: 0.125rem solid $bg-color-grey300;
			}
		}

		&__body {
			background-color: $bg-color-grey;
		}
	}
}

.theme-light {
	.popup-questions {
		.questions-spollers {
			&__title {
				background-color: $bg-color-white-grey;
			}

			&__body {
				background-color: $bg-color-white-grey
			}
		}
	}
}

//Page services,Our Service.Pop up page.
.popup-services {
	.popup-service {
		&__title {
			p {
				font-size: rem(24);
			}
		}
	}

	.services-section__container {
		padding: 0;
	}

	.section-head {
		grid-template-columns: auto;
		margin-bottom: rem(30);
	}

	.services-wrap {
		&__row {
			grid-template-columns: repeat(2, 2fr);
			grid-template-rows: auto;
			@media (max-width: $mobile) {
				grid-template-columns: repeat(1, 1fr);
			}
		}

		&__col {
			grid-row: auto;
			grid-column: auto;

			.services {
				display: flex;

				&__wrap {
					min-height: auto;
					padding: 30px;
					@include adaptive-value("height", 286, 250, 0, 1440, 375);
				}

			}

			&--item3, &--item4 {
				.services__wrap {
					&::after {
						content: none;
					}
				}
			}
		}
	}

	@media (max-width: $mobile-small) {
		.section-head {
			&__title {
				margin-bottom: 0;
			}
		}
	}
}
