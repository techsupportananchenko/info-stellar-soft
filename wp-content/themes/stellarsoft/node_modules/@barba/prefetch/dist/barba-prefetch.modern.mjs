const t=window.requestIdleCallback||function(t){const i=Date.now();return setTimeout(()=>{t({didTimeout:!1,timeRemaining:function(){return Math.max(0,50-(Date.now()-i))}})},1)},i=new class{constructor(){this.name="@barba/prefetch",this.version="2.2.0",this.barba=void 0,this.logger=void 0,this.observer=void 0,this.root=void 0,this.timeout=void 0,this.limit=void 0,this.toPrefetch=new Set}install(t,{root:i=document.body,timeout:s=2e3,limit:h=0}={}){this.logger=new t.Logger(this.name),this.logger.info(this.version),this.barba=t,this.root=i,this.timeout=s,this.limit=h}init(){this.barba.prefetchIgnore?this.logger.warn("barba.prefetchIgnore is enabled"):this.barba.cacheIgnore?this.logger.warn("barba.cacheIgnore is enabled"):(this.observer=new IntersectionObserver(t=>{t.forEach(t=>{if(!t.isIntersecting)return;const i=t.target,s=this.barba.url.getAbsoluteHref(this.barba.dom.getHref(i));this.toPrefetch.has(s)&&(this.observer.unobserve(i),this.barba.cache.has(s)?this.barba.cache.update(s,{action:"prefetch"}):this.barba.cache.set(s,this.barba.request(s,this.barba.timeout,this.barba.onRequestError.bind(this.barba,"barba"),this.barba.cache,this.barba.headers).catch(t=>{this.logger.error(t)}),"prefetch","pending"))})}),this.observe(),this.barba.hooks.after(this.observe,this))}observe(){t(()=>{let t=Array.from(this.root.querySelectorAll("a"));this.limit>0&&(t=t.slice(0,this.limit)),t.forEach(t=>{const i=t,s=this.barba.dom.getHref(i);this.barba.cache.has(s)||this.barba.prevent.checkHref(s)||this.barba.prevent.checkLink(i,{},s)||(this.observer.observe(t),this.toPrefetch.add(s))})},{timeout:this.timeout})}};export{i as default};
//# sourceMappingURL=barba-prefetch.modern.mjs.map
